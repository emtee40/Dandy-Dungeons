cmdhistory=["(+ 1 2 3)" "(f-to-c 100)" "(-main)" "(temp-app)" "(ClassLoader/getSystemResource \\"dandy.bmp\\")" "(defn read-level [level] (ClassLoader/getSystemResource \\"levels/level.a\\")))" "\\n(defn read-level [level] (ClassLoader/getSystemResource \\"levels/level.a\\"))" "(read-level 2)" "(format \\"a.%c\\" 33)" "(str 44)" "(format \\"a.%c\\" (char 33))" "(str \\"levels/level.\\" (char (+ 97 level)))" "(str \\"levels/level.\\" (char (+ 97 4)))" "\\n(defn level-resource-path [level] (str \\"levels/level.\\" (char (+ 97 level))))" "(defn read-level [level] (ClassLoader/getResourceAsStream (level-resource-path level)))" "\\n\\n(defn read-level [level] (ClassLoader/getResourceAsStream (level-resource-path level)))" "(read-level 2)" "(read-level 1)" "\\n(defn lazy-input\\n  \\"Returns a lazy sequence of characters from an input stream or Reader.\\"\\n  [input-stream]\\n  (let [step (fn step []\\n               (let [c (.read input-stream)]\\n                 (when-not (\=\= c -1)\\n                   (let [h (bit-and 15 (bit-shift-right c 4)) l (bit-and 15 c)]\\n                     (cons (byte h) (cons (byte l) (lazy-seq (step))))))))]\\n    (lazy-seq (step))))" "(defn lazy-input\\n  \\"Returns a lazy sequence of bytes from an input stream or Reader.\\"\\n  [input-stream]\\n  (let [step (fn step []\\n               (let [c (.read input-stream)]\\n                 (when-not (\=\= c -1)\\n                   (cons (byte c) (lazy-seq (step))))))]\\n    (lazy-seq (step))))" "(read-level 1)" "(byte 0xff)" "(byte (-128)\\n      )" "(byte -128)" "\\n(defn lazy-input\\n  \\"Returns a lazy sequence of bytes (as ints) from an input stream or Reader.\\"\\n  [input-stream]\\n  (let [step (fn step []\\n               (let [c (.read input-stream)]\\n                 (when-not (\=\= c -1)\\n                   (cons c (lazy-seq (step))))))]\\n    (lazy-seq (step))))\\n\\n(defn byte-to-nibbles [x] [(bit-and 15 x) (bit-and 15 (bit-shift-right x 4))])" "(byte-to-nibbles 12)" "(byte-to-nibbles 230)" "(mapcat bytes-to-nibbles [1 2 33 -4])" "(mapcat byte-to-nibbles [1 2 33 -4])" "\\n(defn read-level [level]\\n  (with-open [r (resource-as-stream (level-resource-path level))]\\n    (vec (mapcat bytes-to-nibbles (lazy-input r)))))" "\\n(defn read-level [level]\\n  (with-open [r (resource-as-stream (level-resource-path level))]\\n    (vec (mapcat byte-to-nibbles (lazy-input r)))))" "(read-level 3)" "\\n(defn print-level [level]\\n  (str (map (fn [x] (nth encoding x)) level)))" "(def encoding \\" *DudKF$i123mnop\\")" "\\n(defn print-level [level]\\n  (str (map (fn [x] (nth encoding x)) level)))" "(print-level (read-level 0))" "(print-level [1 2 3])" "\\n(defn print-level [level]\\n  (apply str (map (fn [x] (nth encoding x)) level)))" "(print-level [1 2 3])" "(print-level (read-level 0))"]
eclipse.preferences.version=1
